package routers

import (
	_ "blog-go-server/docs" // docs is generated by Swag CLI, you have to import it.
	"blog-go-server/middleware/cors"
	"blog-go-server/middleware/jwt"
	"blog-go-server/pkg/setting"
	"blog-go-server/pkg/upload"
	adminV1 "blog-go-server/routers/admin/v1"
	"blog-go-server/routers/api/v0"
	"blog-go-server/routers/api/v1"
	"github.com/gin-gonic/gin"
	"github.com/swaggo/gin-swagger"
	"github.com/swaggo/gin-swagger/swaggerFiles"
	"net/http"
)

func InitRouter() *gin.Engine {
	r := gin.New()

	r.Use(gin.Logger())

	r.Use(gin.Recovery())

	r.Use(cors.Cors())

	gin.SetMode(setting.ServerSetting.RunMode)

	// http.FileServer
	r.StaticFS("/upload/images", http.Dir(upload.GetImageFullPath()))

	// swagger
	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	// 通用接口
	apiV0 := r.Group("/api/v0")
	{
		apiV0.POST("/register", v0.Register)
		apiV0.GET("/auth", v0.GetAuth)
		apiV0.GET("/adminauth", v0.AdminAuth)
		apiV0.GET("/qrcode", v0.QrCode)
		apiV0.POST("/upload", v0.UploadImage)
	}

	// 业务接口v1
	apiV1 := r.Group("/api/v1")
	{
		//获取标签列表
		apiV1.GET("/tags", v1.GetTags)
		//获取所有标签
		apiV1.GET("/tags/all", v1.GetAllTags)

		//获取文章列表
		apiV1.GET("/articles", v1.GetArticles)
		//获取指定文章
		apiV1.GET("/articles/:id", v1.GetArticle)

		//获取评论列表
		apiV1.GET("/comments", v1.GetComments)
		//获取评论
		apiV1.GET("/comments/:id", v1.GetComment)
	}
	// 业务接口v1，需要登陆
	apiV1Auth := r.Group("/api/v1/auth/")
	apiV1Auth.Use(jwt.JWT())
	{
		// 添加评论
		apiV1Auth.POST("/comments", v1.AddComment)
	}

	// 管理后台接口v1
	apiAdminV1 := r.Group("/admin/v1")
	apiAdminV1.Use(jwt.JWTAdmin())
	{
		//获取标签列表
		apiAdminV1.GET("/tags", adminV1.GetTags)
		//新建标签
		apiAdminV1.POST("/tags", adminV1.AddTag)
		//获取所有标签
		apiAdminV1.GET("/tags/all", adminV1.GetAllTags)
		//更新指定标签
		apiAdminV1.PUT("/tags/:id", adminV1.EditTag)
		//删除指定标签
		apiAdminV1.DELETE("/tags/:id", adminV1.DeleteTag)

		//获取文章列表
		apiAdminV1.GET("/articles", adminV1.GetArticles)
		//获取指定文章
		apiAdminV1.GET("/articles/:id", adminV1.GetArticle)
		//新建文章
		apiAdminV1.POST("/articles", adminV1.AddArticle)
		//更新指定文章
		apiAdminV1.PUT("/articles/:id", adminV1.EditArticle)
		//删除指定文章
		apiAdminV1.DELETE("/articles/:id", adminV1.DeleteArticle)

		//获取评论列表
		apiAdminV1.GET("/comments", adminV1.GetComments)
		//删除评论
		apiAdminV1.DELETE("/comments/:id", adminV1.DeleteComment)

		//获取用户列表
		apiAdminV1.GET("/users", adminV1.GetUsers)
		//删除用户
		apiAdminV1.DELETE("/users/:id", adminV1.DeleteUser)
	}

	return r
}
